{
  "contractName": "TokensEqualTextERC721",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_tokenIDs",
          "type": "uint256[]"
        }
      ],
      "name": "mintBatch",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252601a81527f546f6b656e7320457175616c732054657874204552432d3732310000000000006020808301919091528251808401909352600683527f544554373231000000000000000000000000000000000000000000000000000090830152908181620000b17f01ffc9a700000000000000000000000000000000000000000000000000000000640100000000620001cf810204565b620000e57f80ac58cd00000000000000000000000000000000000000000000000000000000640100000000620001cf810204565b620001197f780e9d6300000000000000000000000000000000000000000000000000000000640100000000620001cf810204565b81516200012e9060099060208501906200023c565b5080516200014490600a9060208401906200023c565b50620001797f5b5e139f00000000000000000000000000000000000000000000000000000000640100000000620001cf810204565b5050600c8054600160a060020a031916331790819055604051600160a060020a03919091169250600091507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620002e1565b7fffffffff000000000000000000000000000000000000000000000000000000008082161415620001ff57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200027f57805160ff1916838001178555620002af565b82800160010185558215620002af579182015b82811115620002af57825182559160200191906001019062000292565b50620002bd929150620002c1565b5090565b620002de91905b80821115620002bd5760008155600101620002c8565b90565b61132480620002f16000396000f3fe60806040526004361061011c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a7811461012157806306fdde031461017e578063081812fc14610208578063095ea7b31461024e57806318160ddd1461028957806323b872dd146102b05780632f745c59146102f357806342842e0e1461032c5780634f6ccce71461036f5780636352211e1461039957806370a08231146103c3578063715018a6146103f657806375ceb3411461040b5780638da5cb5b146104985780638f32d59b146104ad57806395d89b41146104c2578063a22cb465146104d7578063b88d4fde14610512578063c87b56dd146105e5578063e985e9c51461060f578063f2fde38b1461064a575b600080fd5b34801561012d57600080fd5b5061016a6004803603602081101561014457600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661067d565b604080519115158252519081900360200190f35b34801561018a57600080fd5b506101936106b1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101cd5781810151838201526020016101b5565b50505050905090810190601f1680156101fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021457600080fd5b506102326004803603602081101561022b57600080fd5b5035610748565b60408051600160a060020a039092168252519081900360200190f35b34801561025a57600080fd5b506102876004803603604081101561027157600080fd5b50600160a060020a03813516906020013561077a565b005b34801561029557600080fd5b5061029e610830565b60408051918252519081900360200190f35b3480156102bc57600080fd5b50610287600480360360608110156102d357600080fd5b50600160a060020a03813581169160208101359091169060400135610836565b3480156102ff57600080fd5b5061029e6004803603604081101561031657600080fd5b50600160a060020a03813516906020013561085b565b34801561033857600080fd5b506102876004803603606081101561034f57600080fd5b50600160a060020a038135811691602081013590911690604001356108a8565b34801561037b57600080fd5b5061029e6004803603602081101561039257600080fd5b50356108c4565b3480156103a557600080fd5b50610232600480360360208110156103bc57600080fd5b50356108f9565b3480156103cf57600080fd5b5061029e600480360360208110156103e657600080fd5b5035600160a060020a0316610923565b34801561040257600080fd5b50610287610956565b34801561041757600080fd5b506102876004803603604081101561042e57600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561045957600080fd5b82018360208201111561046b57600080fd5b8035906020019184602083028401116401000000008311171561048d57600080fd5b5090925090506109c0565b3480156104a457600080fd5b50610232610a08565b3480156104b957600080fd5b5061016a610a17565b3480156104ce57600080fd5b50610193610a28565b3480156104e357600080fd5b50610287600480360360408110156104fa57600080fd5b50600160a060020a0381351690602001351515610a89565b34801561051e57600080fd5b506102876004803603608081101561053557600080fd5b600160a060020a0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561057057600080fd5b82018360208201111561058257600080fd5b803590602001918460018302840111640100000000831117156105a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b0d945050505050565b3480156105f157600080fd5b506101936004803603602081101561060857600080fd5b5035610b2f565b34801561061b57600080fd5b5061016a6004803603604081101561063257600080fd5b50600160a060020a0381358116916020013516610be4565b34801561065657600080fd5b506102876004803603602081101561066d57600080fd5b5035600160a060020a0316610c12565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561073d5780601f106107125761010080835404028352916020019161073d565b820191906000526020600020905b81548152906001019060200180831161072057829003601f168201915b505050505090505b90565b600061075382610c31565b151561075e57600080fd5b50600090815260026020526040902054600160a060020a031690565b6000610785826108f9565b9050600160a060020a0383811690821614156107a057600080fd5b33600160a060020a03821614806107bc57506107bc8133610be4565b15156107c757600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6108403382610c4e565b151561084b57600080fd5b610856838383610cad565b505050565b600061086683610923565b821061087157600080fd5b600160a060020a038316600090815260056020526040902080548390811061089557fe5b9060005260206000200154905092915050565b6108568383836020604051908101604052806000815250610b0d565b60006108ce610830565b82106108d957600080fd5b60078054839081106108e757fe5b90600052602060002001549050919050565b600081815260016020526040812054600160a060020a031680151561091d57600080fd5b92915050565b6000600160a060020a038216151561093a57600080fd5b50600160a060020a031660009081526003602052604090205490565b61095e610a17565b151561096957600080fd5b600c54604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600c805473ffffffffffffffffffffffffffffffffffffffff19169055565b6109c8610a17565b15156109d357600080fd5b60005b81811015610a02576109fa848484848181106109ee57fe5b90506020020135610ccc565b6001016109d6565b50505050565b600c54600160a060020a031690565b600c54600160a060020a0316331490565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561073d5780601f106107125761010080835404028352916020019161073d565b600160a060020a038216331415610a9f57600080fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610b18848484610836565b610b2484848484610ced565b1515610a0257600080fd5b6060610b3a82610c31565b1515610b4557600080fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610bd85780601f10610bad57610100808354040283529160200191610bd8565b820191906000526020600020905b815481529060010190602001808311610bbb57829003601f168201915b50505050509050919050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b610c1a610a17565b1515610c2557600080fd5b610c2e81610e69565b50565b600090815260016020526040902054600160a060020a0316151590565b600080610c5a836108f9565b905080600160a060020a031684600160a060020a03161480610c95575083600160a060020a0316610c8a84610748565b600160a060020a0316145b80610ca55750610ca58185610be4565b949350505050565b610cb8838383610ee7565b610cc28382611003565b61085682826110fa565b610cd68282611138565b610ce082826110fa565b610ce9816111f9565b5050565b6000610d0184600160a060020a031661123d565b1515610d0f57506001610ca5565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610da2578181015183820152602001610d8a565b50505050905090810190601f168015610dcf5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610df157600080fd5b505af1158015610e05573d6000803e3d6000fd5b505050506040513d6020811015610e1b57600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b600160a060020a0381161515610e7e57600080fd5b600c54604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b82600160a060020a0316610efa826108f9565b600160a060020a031614610f0d57600080fd5b600160a060020a0382161515610f2257600080fd5b610f2b81611245565b600160a060020a038316600090815260036020526040902054610f5590600163ffffffff61128d16565b600160a060020a038085166000908152600360205260408082209390935590841681522054610f8b90600163ffffffff6112a216565b600160a060020a0380841660008181526003602090815260408083209590955585825260019052838120805473ffffffffffffffffffffffffffffffffffffffff1916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a03821660009081526005602052604081205461102d90600163ffffffff61128d16565b6000838152600660205260409020549091508082146110ca57600160a060020a038416600090815260056020526040812080548490811061106a57fe5b90600052602060002001549050806005600087600160a060020a0316600160a060020a03168152602001908152602001600020838154811015156110aa57fe5b600091825260208083209091019290925591825260069052604090208190555b600160a060020a03841660009081526005602052604090208054906110f39060001983016112bb565b5050505050565b600160a060020a0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b600160a060020a038216151561114d57600080fd5b61115681610c31565b1561116057600080fd5b6000818152600160208181526040808420805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03881690811790915584526003909152909120546111ae916112a2565b600160a060020a0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000903b1190565b600081815260026020526040902054600160a060020a031615610c2e576000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b60008282111561129c57600080fd5b50900390565b6000828201838110156112b457600080fd5b9392505050565b8154818355818111156108565760008381526020902061085691810190830161074591905b808211156112f457600081556001016112e0565b509056fea165627a7a7230582017451a07d55a2e565a9ffcb07eed8a863b4da93a15b7f31c97cadd392f55d90d0029",
  "deployedBytecode": "",
  "sourceMap": "235:372:3:-;;;295:86;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;474:93:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:39:7;658:19;639:18;;;;:39;:::i;:::-;1905::11;1924:19;1905:18;;;;:39;:::i;:::-;1238:49:12;1257:29;1238:18;;;;:49;:::i;:::-;735:12:14;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;757:16:14;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;861:46:14;880:26;861:18;;;;:46;:::i;:::-;-1:-1:-1;;515:6:10;:19;;-1:-1:-1;;;;;;515:19:10;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:10;;;;;-1:-1:-1;515:6:10;;-1:-1:-1;549:40:10;;515:6;;549:40;235:372:3;;988:158:7;1063:25;;;;;;1055:34;;;;;;1099:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1099:40:7;1135:4;1099:40;;;988:158::o;235:372:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;235:372:3;;;-1:-1:-1;235:372:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "235:372:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:133:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;776:133:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;776:133:7;-1:-1:-1;;776:133:7;;;;;;;;;;;;;;;;;;;;;1018:83:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1018:83:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1018:83:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3703:151:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3703:151:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3703:151:11;;;;;;;-1:-1:-1;;;;;3703:151:11;;;;;;;;;;;;;;3126:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3126:292:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3126:292:11;;;;;;;;;;;2001:94:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2001:94:12;;;;;;;;;;;;;;;;;;;;5258:180:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5258:180:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5258:180:11;;;;;;;;;;;;;;;;;;1667:182:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:182:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1667:182:12;;;;;;;;;6077:181:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6077:181:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6077:181:11;;;;;;;;;;;;;;;;;;2432:148:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2432:148:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2432:148:12;;;2528:177:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2528:177:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2528:177:11;;;2154:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2154:150:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2154:150:11;-1:-1:-1;;;;;2154:150:11;;;1347:137:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:10;;;;387:218:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;387:218:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;387:218:3;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;387:218:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;387:218:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;387:218:3;;-1:-1:-1;387:218:3;-1:-1:-1;387:218:3;;659:77:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:10;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:10;;;;1209:87:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1209:87:14;;;;4146:213:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4146:213:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4146:213:11;;;;;;;;;;;6963:260;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6963:260:11;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6963:260:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6963:260:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6963:260:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6963:260:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6963:260:11;;-1:-1:-1;6963:260:11;;-1:-1:-1;;;;;6963:260:11;1495:151:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1495:151:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1495:151:14;;;4680:145:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4680:145:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4680:145:11;;;;;;;;;;;1655:107:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:10;-1:-1:-1;;;;;1655:107:10;;;776:133:7;-1:-1:-1;;869:33:7;846:4;869:33;;;;;;;;;;;;;;776:133::o;1018:83:14:-;1089:5;1082:12;;;;;;;;-1:-1:-1;;1082:12:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:13;;1082:12;;1089:5;;1082:12;;1089:5;1082:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:83;;:::o;3703:151:11:-;3762:7;3789:16;3797:7;3789;:16::i;:::-;3781:25;;;;;;;;-1:-1:-1;3823:24:11;;;;:15;:24;;;;;;-1:-1:-1;;;;;3823:24:11;;3703:151::o;3126:292::-;3189:13;3205:16;3213:7;3205;:16::i;:::-;3189:32;-1:-1:-1;;;;;;3239:11:11;;;;;;;;3231:20;;;;;;3269:10;-1:-1:-1;;;;;3269:19:11;;;;:58;;;3292:35;3309:5;3316:10;3292:16;:35::i;:::-;3261:67;;;;;;;;3339:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3339:29:11;-1:-1:-1;;;;;3339:29:11;;;;;;;;;3383:28;;3339:24;;3383:28;;;;;;;3126:292;;;:::o;2001:94:12:-;2071:10;:17;2001:94;:::o;5258:180:11:-;5348:39;5367:10;5379:7;5348:18;:39::i;:::-;5340:48;;;;;;;;5399:32;5413:4;5419:2;5423:7;5399:13;:32::i;:::-;5258:180;;;:::o;1667:182:12:-;1747:7;1782:16;1792:5;1782:9;:16::i;:::-;1774:24;;1766:33;;;;;;-1:-1:-1;;;;;1816:19:12;;;;;;:12;:19;;;;;:26;;1836:5;;1816:26;;;;;;;;;;;;;;1809:33;;1667:182;;;;:::o;6077:181:11:-;6212:39;6229:4;6235:2;6239:7;6212:39;;;;;;;;;;;;;:16;:39::i;2432:148:12:-;2490:7;2525:13;:11;:13::i;:::-;2517:21;;2509:30;;;;;;2556:10;:17;;2567:5;;2556:17;;;;;;;;;;;;;;2549:24;;2432:148;;;:::o;2528:177:11:-;2583:7;2618:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2618:20:11;2656:19;;;2648:28;;;;;;2693:5;2528:177;-1:-1:-1;;2528:177:11:o;2154:150::-;2209:7;-1:-1:-1;;;;;2236:19:11;;;;2228:28;;;;;;-1:-1:-1;;;;;;2273:24:11;;;;;:17;:24;;;;;;;2154:150::o;1347:137:10:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1429:6;;1408:40;;1445:1;;-1:-1:-1;;;;;1429:6:10;;1408:40;;1445:1;;1408:40;1458:6;:19;;-1:-1:-1;;1458:19:10;;;1347:137::o;387:218:3:-;863:9:10;:7;:9::i;:::-;855:18;;;;;;;;505:9:3;501:98;520:20;;;501:98;;;561:27;567:6;575:9;;585:1;575:12;;;;;;;;;;;;;561:5;:27::i;:::-;542:3;;501:98;;;;387:218;;;:::o;659:77:10:-;723:6;;-1:-1:-1;;;;;723:6:10;659:77;:::o;979:90::-;1056:6;;-1:-1:-1;;;;;1056:6:10;1042:10;:20;;979:90::o;1209:87:14:-;1282:7;1275:14;;;;;;;;-1:-1:-1;;1275:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:13;;1275:14;;1282:7;;1275:14;;1282:7;1275:14;;;;;;;;;;;;;;;;;;;;;;;;4146:213:11;-1:-1:-1;;;;;4225:16:11;;4231:10;4225:16;;4217:25;;;;;;4271:10;4252:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4252:34:11;;;;;;;;;;;;:45;;-1:-1:-1;;4252:45:11;;;;;;;;;;4312:40;;;;;;;4252:34;;4271:10;4312:40;;;;;;;;;;;4146:213;;:::o;6963:260::-;7069:31;7082:4;7088:2;7092:7;7069:12;:31::i;:::-;7167:48;7190:4;7196:2;7200:7;7209:5;7167:22;:48::i;:::-;7159:57;;;;;;;1495:151:14;1553:13;1586:16;1594:7;1586;:16::i;:::-;1578:25;;;;;;;;1620:19;;;;:10;:19;;;;;;;;;1613:26;;;;;;-1:-1:-1;;1613:26:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:19;;1613:26;;1620:19;1613:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1495:151;;;:::o;4680:145:11:-;-1:-1:-1;;;;;4783:25:11;;;4760:4;4783:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4680:145::o;1655:107:10:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;7412:152:11:-;7469:4;7501:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7501:20:11;7538:19;;;7412:152::o;7927:404::-;8012:4;8028:13;8044:16;8052:7;8044;:16::i;:::-;8028:32;;8247:5;-1:-1:-1;;;;;8236:16:11;:7;-1:-1:-1;;;;;8236:16:11;;:51;;;;8280:7;-1:-1:-1;;;;;8256:31:11;:20;8268:7;8256:11;:20::i;:::-;-1:-1:-1;;;;;8256:31:11;;8236:51;:87;;;;8291:32;8308:5;8315:7;8291:16;:32::i;:::-;8228:96;7927:404;-1:-1:-1;;;;7927:404:11:o;2954:239:12:-;3039:38;3059:4;3065:2;3069:7;3039:19;:38::i;:::-;3088:47;3121:4;3127:7;3088:32;:47::i;:::-;3146:40;3174:2;3178:7;3146:27;:40::i;3448:196::-;3511:24;3523:2;3527:7;3511:11;:24::i;:::-;3546:40;3574:2;3578:7;3546:27;:40::i;:::-;3597;3629:7;3597:31;:40::i;:::-;3448:196;;:::o;10998:335:11:-;11111:4;11132:15;:2;-1:-1:-1;;;;;11132:13:11;;:15::i;:::-;11131:16;11127:58;;;-1:-1:-1;11170:4:11;11163:11;;11127:58;11211:70;;;;;11248:10;11211:70;;;;;;-1:-1:-1;;;;;11211:70:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;11195:13;;11211:36;;;;;;11248:10;;11260:4;;11266:7;;11275:5;;11211:70;;;;;;;;;;;11195:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11211:70:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11211:70:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11211:70:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11211:70:11;-1:-1:-1;;11299:26:11;11309:16;11299:26;;-1:-1:-1;;10998:335:11;;;;;;:::o;1906:183:10:-;-1:-1:-1;;;;;1979:22:10;;;;1971:31;;;;;;2038:6;;2017:38;;-1:-1:-1;;;;;2017:38:10;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;-1:-1:-1;;2065:17:10;-1:-1:-1;;;;;2065:17:10;;;;;;;;;;1906:183::o;10073:402:11:-;10186:4;-1:-1:-1;;;;;10166:24:11;:16;10174:7;10166;:16::i;:::-;-1:-1:-1;;;;;10166:24:11;;10158:33;;;;;;-1:-1:-1;;;;;10209:16:11;;;;10201:25;;;;;;10237:23;10252:7;10237:14;:23::i;:::-;-1:-1:-1;;;;;10297:23:11;;;;;;:17;:23;;;;;;:30;;10325:1;10297:30;:27;:30;:::i;:::-;-1:-1:-1;;;;;10271:23:11;;;;;;;:17;:23;;;;;;:56;;;;10361:21;;;;;;;:28;;10387:1;10361:28;:25;:28;:::i;:::-;-1:-1:-1;;;;;10337:21:11;;;;;;;:17;:21;;;;;;;;:52;;;;10400:20;;;:11;:20;;;;;:25;;-1:-1:-1;;10400:25:11;;;;;10441:27;;10412:7;;10337:21;;10441:27;;;;;;10073:402;;;:::o;6056:1128:12:-;-1:-1:-1;;;;;6343:18:12;;6318:22;6343:18;;;:12;:18;;;;;:25;:32;;6373:1;6343:32;:29;:32;:::i;:::-;6385:18;6406:26;;;:17;:26;;;;;;6318:57;;-1:-1:-1;6536:28:12;;;6532:323;;-1:-1:-1;;;;;6602:18:12;;6580:19;6602:18;;;:12;:18;;;;;:34;;6621:14;;6602:34;;;;;;;;;;;;;;6580:56;;6684:11;6651:12;:18;6664:4;-1:-1:-1;;;;;6651:18:12;-1:-1:-1;;;;;6651:18:12;;;;;;;;;;;;6670:10;6651:30;;;;;;;;;;;;;;;;;;;;;:44;;;;6767:30;;;:17;:30;;;;;:43;;;6532:323;-1:-1:-1;;;;;6941:18:12;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;6941:27:12;;;:::i;:::-;;6056:1128;;;;:::o;4902:183::-;-1:-1:-1;;;;;5015:16:12;;;;;;;:12;:16;;;;;;;;:23;;4986:26;;;:17;:26;;;;;:52;;;5048:16;;;39:1:-1;23:18;;45:23;;5048:30:12;;;;;;;;4902:183::o;8574:278:11:-;-1:-1:-1;;;;;8645:16:11;;;;8637:25;;;;;;8681:16;8689:7;8681;:16::i;:::-;8680:17;8672:26;;;;;;8709:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;8709:25:11;-1:-1:-1;;;;;8709:25:11;;;;;;;;8768:21;;:17;:21;;;;;;;:28;;:25;:28::i;:::-;-1:-1:-1;;;;;8744:21:11;;;;;;:17;:21;;;;;;:52;;;;8812:33;;8837:7;;8744:21;8812:33;;8744:21;;8812:33;8574:278;;:::o;5280:161:12:-;5383:10;:17;;5356:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5410:24:12;;;;;;;5280:161::o;463:624:20:-;523:4;1034:20;;1072:8;;463:624::o;11494:171:11:-;11593:1;11557:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11557:24:11;:38;11553:106;;11646:1;11611:24;;;:15;:24;;;;;:37;;-1:-1:-1;;11611:37:11;;;11494:171::o;2278:145:9:-;2336:7;2363:6;;;;2355:15;;;;;;-1:-1:-1;2392:5:9;;;2278:145::o;2761:::-;2819:7;2850:5;;;2873:6;;;;2865:15;;;;;;2898:1;2761:145;-1:-1:-1;;;2761:145:9:o;235:372:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol\";\n\ncontract TokensEqualTextERC721 is ERC721Full, Ownable {\n    constructor() public\n        ERC721Full(\"Tokens Equals Text ERC-721\", \"TET721\")\n    {}\n\n    function mintBatch(address _owner, uint256[] calldata _tokenIDs)\n        onlyOwner\n        external\n    {\n        for(uint256 i = 0; i < _tokenIDs.length; i++) {\n            _mint(_owner, _tokenIDs[i]);\n        }\n    }\n}\n",
  "sourcePath": "/home/rob/projects/tokens-equal-text/contracts/TokensEqualTextERC721.sol",
  "ast": {
    "absolutePath": "/home/rob/projects/tokens-equal-text/contracts/TokensEqualTextERC721.sol",
    "exportedSymbols": {
      "TokensEqualTextERC721": [
        219
      ]
    },
    "id": 220,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 172,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 173,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 2852,
        "src": "25:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 174,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 3770,
        "src": "90:69:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 175,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 3925,
        "src": "160:73:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 176,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3769,
              "src": "269:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$3769",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 177,
            "nodeType": "InheritanceSpecifier",
            "src": "269:10:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 178,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2851,
              "src": "281:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2851",
                "typeString": "contract Ownable"
              }
            },
            "id": 179,
            "nodeType": "InheritanceSpecifier",
            "src": "281:7:3"
          }
        ],
        "contractDependencies": [
          2439,
          2449,
          2851,
          3410,
          3745,
          3769,
          3896,
          4027,
          4054,
          4077
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 219,
        "linearizedBaseContracts": [
          219,
          2851,
          3769,
          3896,
          4077,
          3745,
          4054,
          3410,
          4027,
          2439,
          2449
        ],
        "name": "TokensEqualTextERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "379:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 187,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "546f6b656e7320457175616c732054657874204552432d373231",
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "335:28:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7619b397c59463ca51f3459c3fbf34aabbf5081a823cced9dac2cc68481d638d",
                      "typeString": "literal_string \"Tokens Equals Text ERC-721\""
                    },
                    "value": "Tokens Equals Text ERC-721"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "544554373231",
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "365:8:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_85c4d18a25c2105276b3a2d00e1193abae149065e6f897be884069e1d4de7242",
                      "typeString": "literal_string \"TET721\""
                    },
                    "value": "TET721"
                  }
                ],
                "id": 184,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 181,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3769,
                  "src": "324:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$3769_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "324:50:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:2:3"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "379:0:3"
            },
            "scope": 219,
            "src": "295:86:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "491:114:3",
              "statements": [
                {
                  "body": {
                    "id": 215,
                    "nodeType": "Block",
                    "src": "547:52:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 209,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "567:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 210,
                                "name": "_tokenIDs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "575:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 212,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 211,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "585:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "575:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 208,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3552
                            ],
                            "referencedDeclaration": 3552,
                            "src": "561:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "561:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 214,
                        "nodeType": "ExpressionStatement",
                        "src": "561:27:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "520:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "_tokenIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "524:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "524:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "520:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 216,
                  "initializationExpression": {
                    "assignments": [
                      198
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 198,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "505:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "505:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 200,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "517:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "505:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "542:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "542:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 207,
                    "nodeType": "ExpressionStatement",
                    "src": "542:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "501:98:3"
                }
              ]
            },
            "documentation": null,
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 195,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 194,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2785,
                  "src": "460:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "460:9:3"
              }
            ],
            "name": "mintBatch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "406:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 192,
                  "name": "_tokenIDs",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "422:28:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 190,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "422:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 191,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "422:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "405:46:3"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:3"
            },
            "scope": 219,
            "src": "387:218:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 220,
        "src": "235:372:3"
      }
    ],
    "src": "0:608:3"
  },
  "legacyAST": {
    "absolutePath": "/home/rob/projects/tokens-equal-text/contracts/TokensEqualTextERC721.sol",
    "exportedSymbols": {
      "TokensEqualTextERC721": [
        219
      ]
    },
    "id": 220,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 172,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 173,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 2852,
        "src": "25:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 174,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 3770,
        "src": "90:69:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 175,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 3925,
        "src": "160:73:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 176,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3769,
              "src": "269:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$3769",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 177,
            "nodeType": "InheritanceSpecifier",
            "src": "269:10:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 178,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2851,
              "src": "281:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2851",
                "typeString": "contract Ownable"
              }
            },
            "id": 179,
            "nodeType": "InheritanceSpecifier",
            "src": "281:7:3"
          }
        ],
        "contractDependencies": [
          2439,
          2449,
          2851,
          3410,
          3745,
          3769,
          3896,
          4027,
          4054,
          4077
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 219,
        "linearizedBaseContracts": [
          219,
          2851,
          3769,
          3896,
          4077,
          3745,
          4054,
          3410,
          4027,
          2439,
          2449
        ],
        "name": "TokensEqualTextERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "379:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 187,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "546f6b656e7320457175616c732054657874204552432d373231",
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "335:28:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7619b397c59463ca51f3459c3fbf34aabbf5081a823cced9dac2cc68481d638d",
                      "typeString": "literal_string \"Tokens Equals Text ERC-721\""
                    },
                    "value": "Tokens Equals Text ERC-721"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "544554373231",
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "365:8:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_85c4d18a25c2105276b3a2d00e1193abae149065e6f897be884069e1d4de7242",
                      "typeString": "literal_string \"TET721\""
                    },
                    "value": "TET721"
                  }
                ],
                "id": 184,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 181,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3769,
                  "src": "324:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$3769_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "324:50:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:2:3"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "379:0:3"
            },
            "scope": 219,
            "src": "295:86:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "491:114:3",
              "statements": [
                {
                  "body": {
                    "id": 215,
                    "nodeType": "Block",
                    "src": "547:52:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 209,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "567:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 210,
                                "name": "_tokenIDs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "575:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 212,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 211,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "585:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "575:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 208,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3552
                            ],
                            "referencedDeclaration": 3552,
                            "src": "561:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "561:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 214,
                        "nodeType": "ExpressionStatement",
                        "src": "561:27:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "520:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "_tokenIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "524:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "524:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "520:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 216,
                  "initializationExpression": {
                    "assignments": [
                      198
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 198,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "505:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "505:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 200,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "517:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "505:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "542:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "542:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 207,
                    "nodeType": "ExpressionStatement",
                    "src": "542:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "501:98:3"
                }
              ]
            },
            "documentation": null,
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 195,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 194,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2785,
                  "src": "460:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "460:9:3"
              }
            ],
            "name": "mintBatch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "406:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 192,
                  "name": "_tokenIDs",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "422:28:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 190,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "422:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 191,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "422:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "405:46:3"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:3"
            },
            "scope": 219,
            "src": "387:218:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 220,
        "src": "235:372:3"
      }
    ],
    "src": "0:608:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-27T01:42:07.065Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}
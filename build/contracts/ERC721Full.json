{
  "contractName": "ERC721Full",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200126038038062001260833981018060405260408110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b509093508492508391506200010b90507f01ffc9a700000000000000000000000000000000000000000000000000000000640100000000620001dd810204565b6200013f7f80ac58cd00000000000000000000000000000000000000000000000000000000640100000000620001dd810204565b620001737f780e9d6300000000000000000000000000000000000000000000000000000000640100000000620001dd810204565b8151620001889060099060208501906200024a565b5080516200019e90600a9060208401906200024a565b50620001d37f5b5e139f00000000000000000000000000000000000000000000000000000000640100000000620001dd810204565b50505050620002ef565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200020d57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028d57805160ff1916838001178555620002bd565b82800160010185558215620002bd579182015b82811115620002bd578251825591602001919060010190620002a0565b50620002cb929150620002cf565b5090565b620002ec91905b80821115620002cb5760008155600101620002d6565b90565b610f6180620002ff6000396000f3fe6080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a781146100ea57806306fdde0314610147578063081812fc146101d1578063095ea7b31461021757806318160ddd1461025257806323b872dd146102795780632f745c59146102bc57806342842e0e146102f55780634f6ccce7146103385780636352211e1461036257806370a082311461038c57806395d89b41146103bf578063a22cb465146103d4578063b88d4fde1461040f578063c87b56dd146104e2578063e985e9c51461050c575b600080fd5b3480156100f657600080fd5b506101336004803603602081101561010d57600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916610547565b604080519115158252519081900360200190f35b34801561015357600080fd5b5061015c61057b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019657818101518382015260200161017e565b50505050905090810190601f1680156101c35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101dd57600080fd5b506101fb600480360360208110156101f457600080fd5b5035610612565b60408051600160a060020a039092168252519081900360200190f35b34801561022357600080fd5b506102506004803603604081101561023a57600080fd5b50600160a060020a038135169060200135610644565b005b34801561025e57600080fd5b506102676106fa565b60408051918252519081900360200190f35b34801561028557600080fd5b506102506004803603606081101561029c57600080fd5b50600160a060020a03813581169160208101359091169060400135610700565b3480156102c857600080fd5b50610267600480360360408110156102df57600080fd5b50600160a060020a038135169060200135610725565b34801561030157600080fd5b506102506004803603606081101561031857600080fd5b50600160a060020a03813581169160208101359091169060400135610772565b34801561034457600080fd5b506102676004803603602081101561035b57600080fd5b503561078e565b34801561036e57600080fd5b506101fb6004803603602081101561038557600080fd5b50356107c3565b34801561039857600080fd5b50610267600480360360208110156103af57600080fd5b5035600160a060020a03166107ed565b3480156103cb57600080fd5b5061015c610820565b3480156103e057600080fd5b50610250600480360360408110156103f757600080fd5b50600160a060020a0381351690602001351515610881565b34801561041b57600080fd5b506102506004803603608081101561043257600080fd5b600160a060020a0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561046d57600080fd5b82018360208201111561047f57600080fd5b803590602001918460018302840111640100000000831117156104a157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610905945050505050565b3480156104ee57600080fd5b5061015c6004803603602081101561050557600080fd5b503561092d565b34801561051857600080fd5b506101336004803603604081101561052f57600080fd5b50600160a060020a03813581169160200135166109e2565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106075780601f106105dc57610100808354040283529160200191610607565b820191906000526020600020905b8154815290600101906020018083116105ea57829003601f168201915b505050505090505b90565b600061061d82610a10565b151561062857600080fd5b50600090815260026020526040902054600160a060020a031690565b600061064f826107c3565b9050600160a060020a03838116908216141561066a57600080fd5b33600160a060020a0382161480610686575061068681336109e2565b151561069157600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b61070a3382610a2d565b151561071557600080fd5b610720838383610a8c565b505050565b6000610730836107ed565b821061073b57600080fd5b600160a060020a038316600090815260056020526040902080548390811061075f57fe5b9060005260206000200154905092915050565b6107208383836020604051908101604052806000815250610905565b60006107986106fa565b82106107a357600080fd5b60078054839081106107b157fe5b90600052602060002001549050919050565b600081815260016020526040812054600160a060020a03168015156107e757600080fd5b92915050565b6000600160a060020a038216151561080457600080fd5b50600160a060020a031660009081526003602052604090205490565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106075780601f106105dc57610100808354040283529160200191610607565b600160a060020a03821633141561089757600080fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610910848484610700565b61091c84848484610aab565b151561092757600080fd5b50505050565b606061093882610a10565b151561094357600080fd5b6000828152600b602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b50505050509050919050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600090815260016020526040902054600160a060020a0316151590565b600080610a39836107c3565b905080600160a060020a031684600160a060020a03161480610a74575083600160a060020a0316610a6984610612565b600160a060020a0316145b80610a845750610a8481856109e2565b949350505050565b610a97838383610c27565b610aa18382610d43565b6107208282610e3a565b6000610abf84600160a060020a0316610e78565b1515610acd57506001610a84565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610b60578181015183820152602001610b48565b50505050905090810190601f168015610b8d5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610baf57600080fd5b505af1158015610bc3573d6000803e3d6000fd5b505050506040513d6020811015610bd957600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b82600160a060020a0316610c3a826107c3565b600160a060020a031614610c4d57600080fd5b600160a060020a0382161515610c6257600080fd5b610c6b81610e80565b600160a060020a038316600090815260036020526040902054610c9590600163ffffffff610eca16565b600160a060020a038085166000908152600360205260408082209390935590841681522054610ccb90600163ffffffff610edf16565b600160a060020a0380841660008181526003602090815260408083209590955585825260019052838120805473ffffffffffffffffffffffffffffffffffffffff1916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a038216600090815260056020526040812054610d6d90600163ffffffff610eca16565b600083815260066020526040902054909150808214610e0a57600160a060020a0384166000908152600560205260408120805484908110610daa57fe5b90600052602060002001549050806005600087600160a060020a0316600160a060020a0316815260200190815260200160002083815481101515610dea57fe5b600091825260208083209091019290925591825260069052604090208190555b600160a060020a0384166000908152600560205260409020805490610e33906000198301610ef8565b5050505050565b600160a060020a0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6000903b1190565b600081815260026020526040902054600160a060020a031615610ec7576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b600082821115610ed957600080fd5b50900390565b600082820183811015610ef157600080fd5b9392505050565b8154818355818111156107205760008381526020902061072091810190830161060f91905b80821115610f315760008155600101610f1d565b509056fea165627a7a723058202bb6c73f0d16ae0a30e3ee102774afcc8aca5e78cda7907934c97a23fafd06620029",
  "deployedBytecode": "0x6080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a781146100ea57806306fdde0314610147578063081812fc146101d1578063095ea7b31461021757806318160ddd1461025257806323b872dd146102795780632f745c59146102bc57806342842e0e146102f55780634f6ccce7146103385780636352211e1461036257806370a082311461038c57806395d89b41146103bf578063a22cb465146103d4578063b88d4fde1461040f578063c87b56dd146104e2578063e985e9c51461050c575b600080fd5b3480156100f657600080fd5b506101336004803603602081101561010d57600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916610547565b604080519115158252519081900360200190f35b34801561015357600080fd5b5061015c61057b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019657818101518382015260200161017e565b50505050905090810190601f1680156101c35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101dd57600080fd5b506101fb600480360360208110156101f457600080fd5b5035610612565b60408051600160a060020a039092168252519081900360200190f35b34801561022357600080fd5b506102506004803603604081101561023a57600080fd5b50600160a060020a038135169060200135610644565b005b34801561025e57600080fd5b506102676106fa565b60408051918252519081900360200190f35b34801561028557600080fd5b506102506004803603606081101561029c57600080fd5b50600160a060020a03813581169160208101359091169060400135610700565b3480156102c857600080fd5b50610267600480360360408110156102df57600080fd5b50600160a060020a038135169060200135610725565b34801561030157600080fd5b506102506004803603606081101561031857600080fd5b50600160a060020a03813581169160208101359091169060400135610772565b34801561034457600080fd5b506102676004803603602081101561035b57600080fd5b503561078e565b34801561036e57600080fd5b506101fb6004803603602081101561038557600080fd5b50356107c3565b34801561039857600080fd5b50610267600480360360208110156103af57600080fd5b5035600160a060020a03166107ed565b3480156103cb57600080fd5b5061015c610820565b3480156103e057600080fd5b50610250600480360360408110156103f757600080fd5b50600160a060020a0381351690602001351515610881565b34801561041b57600080fd5b506102506004803603608081101561043257600080fd5b600160a060020a0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561046d57600080fd5b82018360208201111561047f57600080fd5b803590602001918460018302840111640100000000831117156104a157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610905945050505050565b3480156104ee57600080fd5b5061015c6004803603602081101561050557600080fd5b503561092d565b34801561051857600080fd5b506101336004803603604081101561052f57600080fd5b50600160a060020a03813581169160200135166109e2565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106075780601f106105dc57610100808354040283529160200191610607565b820191906000526020600020905b8154815290600101906020018083116105ea57829003601f168201915b505050505090505b90565b600061061d82610a10565b151561062857600080fd5b50600090815260026020526040902054600160a060020a031690565b600061064f826107c3565b9050600160a060020a03838116908216141561066a57600080fd5b33600160a060020a0382161480610686575061068681336109e2565b151561069157600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b61070a3382610a2d565b151561071557600080fd5b610720838383610a8c565b505050565b6000610730836107ed565b821061073b57600080fd5b600160a060020a038316600090815260056020526040902080548390811061075f57fe5b9060005260206000200154905092915050565b6107208383836020604051908101604052806000815250610905565b60006107986106fa565b82106107a357600080fd5b60078054839081106107b157fe5b90600052602060002001549050919050565b600081815260016020526040812054600160a060020a03168015156107e757600080fd5b92915050565b6000600160a060020a038216151561080457600080fd5b50600160a060020a031660009081526003602052604090205490565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106075780601f106105dc57610100808354040283529160200191610607565b600160a060020a03821633141561089757600080fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610910848484610700565b61091c84848484610aab565b151561092757600080fd5b50505050565b606061093882610a10565b151561094357600080fd5b6000828152600b602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b50505050509050919050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600090815260016020526040902054600160a060020a0316151590565b600080610a39836107c3565b905080600160a060020a031684600160a060020a03161480610a74575083600160a060020a0316610a6984610612565b600160a060020a0316145b80610a845750610a8481856109e2565b949350505050565b610a97838383610c27565b610aa18382610d43565b6107208282610e3a565b6000610abf84600160a060020a0316610e78565b1515610acd57506001610a84565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610b60578181015183820152602001610b48565b50505050905090810190601f168015610b8d5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610baf57600080fd5b505af1158015610bc3573d6000803e3d6000fd5b505050506040513d6020811015610bd957600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b82600160a060020a0316610c3a826107c3565b600160a060020a031614610c4d57600080fd5b600160a060020a0382161515610c6257600080fd5b610c6b81610e80565b600160a060020a038316600090815260036020526040902054610c9590600163ffffffff610eca16565b600160a060020a038085166000908152600360205260408082209390935590841681522054610ccb90600163ffffffff610edf16565b600160a060020a0380841660008181526003602090815260408083209590955585825260019052838120805473ffffffffffffffffffffffffffffffffffffffff1916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a038216600090815260056020526040812054610d6d90600163ffffffff610eca16565b600083815260066020526040902054909150808214610e0a57600160a060020a0384166000908152600560205260408120805484908110610daa57fe5b90600052602060002001549050806005600087600160a060020a0316600160a060020a0316815260200190815260200160002083815481101515610dea57fe5b600091825260208083209091019290925591825260069052604090208190555b600160a060020a0384166000908152600560205260409020805490610e33906000198301610ef8565b5050505050565b600160a060020a0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6000903b1190565b600081815260026020526040902054600160a060020a031615610ec7576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b600082821115610ed957600080fd5b50900390565b600082820183811015610ef157600080fd5b9392505050565b8154818355818111156107205760008381526020902061072091810190830161060f91905b80821115610f315760008155600101610f1d565b509056fea165627a7a723058202bb6c73f0d16ae0a30e3ee102774afcc8aca5e78cda7907934c97a23fafd06620029",
  "sourceMap": "404:165:10:-;;;474:93;8:9:-1;5:2;;;30:1;27;20:12;5:2;474:93:10;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;474:93:10;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;474:93:10;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;474:93:10;;-1:-1:-1;544:4:10;;-1:-1:-1;474:93:10;;-1:-1:-1;639:39:5;;-1:-1:-1;658:19:5;639:18;;;;:39;:::i;:::-;1905::8;1924:19;1905:18;;;;:39;:::i;:::-;1238:49:9;1257:29;1238:18;;;;:49;:::i;:::-;735:12:11;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;757:16:11;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;861:46:11;880:26;861:18;;;;:46;:::i;:::-;663:251;;474:93:10;;404:165;;988:158:5;1063:25;;;;;;1055:34;;;;;;1099:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1099:40:5;1135:4;1099:40;;;988:158::o;404:165:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;404:165:10;;;-1:-1:-1;404:165:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "404:165:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:133:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;776:133:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;776:133:5;-1:-1:-1;;776:133:5;;;;;;;;;;;;;;;;;;;;;1018:83:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1018:83:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1018:83:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3703:151:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3703:151:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3703:151:8;;;;;;;-1:-1:-1;;;;;3703:151:8;;;;;;;;;;;;;;3126:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3126:292:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3126:292:8;;;;;;;;;;;2001:94:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2001:94:9;;;;;;;;;;;;;;;;;;;;5258:180:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5258:180:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5258:180:8;;;;;;;;;;;;;;;;;;1667:182:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:182:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1667:182:9;;;;;;;;;6077:181:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6077:181:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6077:181:8;;;;;;;;;;;;;;;;;;2432:148:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2432:148:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2432:148:9;;;2528:177:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2528:177:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2528:177:8;;;2154:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2154:150:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2154:150:8;-1:-1:-1;;;;;2154:150:8;;;1209:87:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1209:87:11;;;;4146:213:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4146:213:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4146:213:8;;;;;;;;;;;6963:260;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6963:260:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6963:260:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6963:260:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6963:260:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6963:260:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6963:260:8;;-1:-1:-1;6963:260:8;;-1:-1:-1;;;;;6963:260:8;1495:151:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1495:151:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1495:151:11;;;4680:145:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4680:145:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4680:145:8;;;;;;;;;;;776:133:5;-1:-1:-1;;869:33:5;846:4;869:33;;;;;;;;;;;;;;776:133::o;1018:83:11:-;1089:5;1082:12;;;;;;;;-1:-1:-1;;1082:12:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:13;;1082:12;;1089:5;;1082:12;;1089:5;1082:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:83;;:::o;3703:151:8:-;3762:7;3789:16;3797:7;3789;:16::i;:::-;3781:25;;;;;;;;-1:-1:-1;3823:24:8;;;;:15;:24;;;;;;-1:-1:-1;;;;;3823:24:8;;3703:151::o;3126:292::-;3189:13;3205:16;3213:7;3205;:16::i;:::-;3189:32;-1:-1:-1;;;;;;3239:11:8;;;;;;;;3231:20;;;;;;3269:10;-1:-1:-1;;;;;3269:19:8;;;;:58;;;3292:35;3309:5;3316:10;3292:16;:35::i;:::-;3261:67;;;;;;;;3339:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3339:29:8;-1:-1:-1;;;;;3339:29:8;;;;;;;;;3383:28;;3339:24;;3383:28;;;;;;;3126:292;;;:::o;2001:94:9:-;2071:10;:17;2001:94;:::o;5258:180:8:-;5348:39;5367:10;5379:7;5348:18;:39::i;:::-;5340:48;;;;;;;;5399:32;5413:4;5419:2;5423:7;5399:13;:32::i;:::-;5258:180;;;:::o;1667:182:9:-;1747:7;1782:16;1792:5;1782:9;:16::i;:::-;1774:24;;1766:33;;;;;;-1:-1:-1;;;;;1816:19:9;;;;;;:12;:19;;;;;:26;;1836:5;;1816:26;;;;;;;;;;;;;;1809:33;;1667:182;;;;:::o;6077:181:8:-;6212:39;6229:4;6235:2;6239:7;6212:39;;;;;;;;;;;;;:16;:39::i;2432:148:9:-;2490:7;2525:13;:11;:13::i;:::-;2517:21;;2509:30;;;;;;2556:10;:17;;2567:5;;2556:17;;;;;;;;;;;;;;2549:24;;2432:148;;;:::o;2528:177:8:-;2583:7;2618:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2618:20:8;2656:19;;;2648:28;;;;;;2693:5;2528:177;-1:-1:-1;;2528:177:8:o;2154:150::-;2209:7;-1:-1:-1;;;;;2236:19:8;;;;2228:28;;;;;;-1:-1:-1;;;;;;2273:24:8;;;;;:17;:24;;;;;;;2154:150::o;1209:87:11:-;1282:7;1275:14;;;;;;;;-1:-1:-1;;1275:14:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:13;;1275:14;;1282:7;;1275:14;;1282:7;1275:14;;;;;;;;;;;;;;;;;;;;;;;;4146:213:8;-1:-1:-1;;;;;4225:16:8;;4231:10;4225:16;;4217:25;;;;;;4271:10;4252:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4252:34:8;;;;;;;;;;;;:45;;-1:-1:-1;;4252:45:8;;;;;;;;;;4312:40;;;;;;;4252:34;;4271:10;4312:40;;;;;;;;;;;4146:213;;:::o;6963:260::-;7069:31;7082:4;7088:2;7092:7;7069:12;:31::i;:::-;7167:48;7190:4;7196:2;7200:7;7209:5;7167:22;:48::i;:::-;7159:57;;;;;;;;6963:260;;;;:::o;1495:151:11:-;1553:13;1586:16;1594:7;1586;:16::i;:::-;1578:25;;;;;;;;1620:19;;;;:10;:19;;;;;;;;;1613:26;;;;;;-1:-1:-1;;1613:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:19;;1613:26;;1620:19;1613:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1495:151;;;:::o;4680:145:8:-;-1:-1:-1;;;;;4783:25:8;;;4760:4;4783:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4680:145::o;7412:152::-;7469:4;7501:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7501:20:8;7538:19;;;7412:152::o;7927:404::-;8012:4;8028:13;8044:16;8052:7;8044;:16::i;:::-;8028:32;;8247:5;-1:-1:-1;;;;;8236:16:8;:7;-1:-1:-1;;;;;8236:16:8;;:51;;;;8280:7;-1:-1:-1;;;;;8256:31:8;:20;8268:7;8256:11;:20::i;:::-;-1:-1:-1;;;;;8256:31:8;;8236:51;:87;;;;8291:32;8308:5;8315:7;8291:16;:32::i;:::-;8228:96;7927:404;-1:-1:-1;;;;7927:404:8:o;2954:239:9:-;3039:38;3059:4;3065:2;3069:7;3039:19;:38::i;:::-;3088:47;3121:4;3127:7;3088:32;:47::i;:::-;3146:40;3174:2;3178:7;3146:27;:40::i;10998:335:8:-;11111:4;11132:15;:2;-1:-1:-1;;;;;11132:13:8;;:15::i;:::-;11131:16;11127:58;;;-1:-1:-1;11170:4:8;11163:11;;11127:58;11211:70;;;;;11248:10;11211:70;;;;;;-1:-1:-1;;;;;11211:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;11195:13;;11211:36;;;;;;11248:10;;11260:4;;11266:7;;11275:5;;11211:70;;;;;;;;;;;11195:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11211:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11211:70:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11211:70:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11211:70:8;-1:-1:-1;;11299:26:8;11309:16;11299:26;;-1:-1:-1;;10998:335:8;;;;;;:::o;10073:402::-;10186:4;-1:-1:-1;;;;;10166:24:8;:16;10174:7;10166;:16::i;:::-;-1:-1:-1;;;;;10166:24:8;;10158:33;;;;;;-1:-1:-1;;;;;10209:16:8;;;;10201:25;;;;;;10237:23;10252:7;10237:14;:23::i;:::-;-1:-1:-1;;;;;10297:23:8;;;;;;:17;:23;;;;;;:30;;10325:1;10297:30;:27;:30;:::i;:::-;-1:-1:-1;;;;;10271:23:8;;;;;;;:17;:23;;;;;;:56;;;;10361:21;;;;;;;:28;;10387:1;10361:28;:25;:28;:::i;:::-;-1:-1:-1;;;;;10337:21:8;;;;;;;:17;:21;;;;;;;;:52;;;;10400:20;;;:11;:20;;;;;:25;;-1:-1:-1;;10400:25:8;;;;;10441:27;;10412:7;;10337:21;;10441:27;;;;;;10073:402;;;:::o;6056:1128:9:-;-1:-1:-1;;;;;6343:18:9;;6318:22;6343:18;;;:12;:18;;;;;:25;:32;;6373:1;6343:32;:29;:32;:::i;:::-;6385:18;6406:26;;;:17;:26;;;;;;6318:57;;-1:-1:-1;6536:28:9;;;6532:323;;-1:-1:-1;;;;;6602:18:9;;6580:19;6602:18;;;:12;:18;;;;;:34;;6621:14;;6602:34;;;;;;;;;;;;;;6580:56;;6684:11;6651:12;:18;6664:4;-1:-1:-1;;;;;6651:18:9;-1:-1:-1;;;;;6651:18:9;;;;;;;;;;;;6670:10;6651:30;;;;;;;;;;;;;;;;;;;;;:44;;;;6767:30;;;:17;:30;;;;;:43;;;6532:323;-1:-1:-1;;;;;6941:18:9;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;6941:27:9;;;:::i;:::-;;6056:1128;;;;:::o;4902:183::-;-1:-1:-1;;;;;5015:16:9;;;;;;;:12;:16;;;;;;;;:23;;4986:26;;;:17;:26;;;;;:52;;;5048:16;;;39:1:-1;23:18;;45:23;;5048:30:9;;;;;;;;4902:183::o;463:624:16:-;523:4;1034:20;;1072:8;;463:624::o;11494:171:8:-;11593:1;11557:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11557:24:8;:38;11553:106;;11646:1;11611:24;;;:15;:24;;;;;:37;;-1:-1:-1;;11611:37:8;;;11553:106;11494:171;:::o;2278:145:7:-;2336:7;2363:6;;;;2355:15;;;;;;-1:-1:-1;2392:5:7;;;2278:145::o;2761:::-;2819:7;2850:5;;;2873:6;;;;2865:15;;;;;;2898:1;2761:145;-1:-1:-1;;;2761:145:7:o;404:165:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title Full ERC721 Token\n * This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology\n * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n */\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\n    constructor (string memory name, string memory symbol) ERC721Metadata(name, symbol) public {}\n}\n",
  "sourcePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        3667
      ]
    },
    "id": 3668,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3645,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 3646,
        "nodeType": "ImportDirective",
        "scope": 3668,
        "sourceUnit": 3309,
        "src": "25:22:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 3647,
        "nodeType": "ImportDirective",
        "scope": 3668,
        "sourceUnit": 3644,
        "src": "48:32:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 3648,
        "nodeType": "ImportDirective",
        "scope": 3668,
        "sourceUnit": 3795,
        "src": "81:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3649,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3308,
              "src": "427:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$3308",
                "typeString": "contract ERC721"
              }
            },
            "id": 3650,
            "nodeType": "InheritanceSpecifier",
            "src": "427:6:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3651,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3643,
              "src": "435:16:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$3643",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 3652,
            "nodeType": "InheritanceSpecifier",
            "src": "435:16:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3653,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3794,
              "src": "453:14:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$3794",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 3654,
            "nodeType": "InheritanceSpecifier",
            "src": "453:14:10"
          }
        ],
        "contractDependencies": [
          2446,
          2456,
          3308,
          3643,
          3794,
          3897,
          3924,
          3947
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
        "fullyImplemented": true,
        "id": 3667,
        "linearizedBaseContracts": [
          3667,
          3794,
          3947,
          3643,
          3924,
          3308,
          3897,
          2446,
          2456
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3665,
              "nodeType": "Block",
              "src": "565:2:10",
              "statements": []
            },
            "documentation": null,
            "id": 3666,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3661,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3656,
                    "src": "544:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3662,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3658,
                    "src": "550:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3663,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3660,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3794,
                  "src": "529:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$3794_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "529:28:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3656,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3666,
                  "src": "487:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3655,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3658,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3666,
                  "src": "507:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3657,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:42:10"
            },
            "returnParameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:0:10"
            },
            "scope": 3667,
            "src": "474:93:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3668,
        "src": "404:165:10"
      }
    ],
    "src": "0:570:10"
  },
  "legacyAST": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        3667
      ]
    },
    "id": 3668,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3645,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 3646,
        "nodeType": "ImportDirective",
        "scope": 3668,
        "sourceUnit": 3309,
        "src": "25:22:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 3647,
        "nodeType": "ImportDirective",
        "scope": 3668,
        "sourceUnit": 3644,
        "src": "48:32:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 3648,
        "nodeType": "ImportDirective",
        "scope": 3668,
        "sourceUnit": 3795,
        "src": "81:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3649,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3308,
              "src": "427:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$3308",
                "typeString": "contract ERC721"
              }
            },
            "id": 3650,
            "nodeType": "InheritanceSpecifier",
            "src": "427:6:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3651,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3643,
              "src": "435:16:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$3643",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 3652,
            "nodeType": "InheritanceSpecifier",
            "src": "435:16:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3653,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3794,
              "src": "453:14:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$3794",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 3654,
            "nodeType": "InheritanceSpecifier",
            "src": "453:14:10"
          }
        ],
        "contractDependencies": [
          2446,
          2456,
          3308,
          3643,
          3794,
          3897,
          3924,
          3947
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
        "fullyImplemented": true,
        "id": 3667,
        "linearizedBaseContracts": [
          3667,
          3794,
          3947,
          3643,
          3924,
          3308,
          3897,
          2446,
          2456
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3665,
              "nodeType": "Block",
              "src": "565:2:10",
              "statements": []
            },
            "documentation": null,
            "id": 3666,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3661,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3656,
                    "src": "544:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3662,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3658,
                    "src": "550:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3663,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3660,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3794,
                  "src": "529:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$3794_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "529:28:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3656,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3666,
                  "src": "487:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3655,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3658,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3666,
                  "src": "507:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3657,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:42:10"
            },
            "returnParameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:0:10"
            },
            "scope": 3667,
            "src": "474:93:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3668,
        "src": "404:165:10"
      }
    ],
    "src": "0:570:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-27T00:27:46.559Z",
  "devdoc": {
    "details": "see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology"
  },
  "userdoc": {
    "methods": {}
  }
}